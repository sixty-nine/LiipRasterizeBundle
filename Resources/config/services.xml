<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <!-- PhantomJs wrapper service -->

        <service id="liip_rasterize.phantomjs" class="Liip\RasterizeBundle\Helper\PhantomJs">
            <argument>%liip_rasterize.phantomjs.binary%</argument>
            <argument>%liip_rasterize.xvfb.display%</argument>
        </service>

        <!-- Raterizer service -->

        <service id="liip_rasterize.rasterizer" class="Liip\RasterizeBundle\Helper\Rasterizer">
            <argument type="service" id="liip_rasterize.phantomjs" />
            <argument>%liip_rasterize.phantomjs.rasterize_script%</argument>
            <argument>%liip_rasterize.rasterize_viewport.width%</argument>
            <argument>%liip_rasterize.rasterize_viewport.height%</argument>
        </service>

        <!-- LiipImagine custom cache resolver -->

        <service id="liip_rasterize.imagine.cacheresolver" class="Liip\RasterizeBundle\Imagine\Cache\Resolver\RasterizeResolver">
            <tag name="liip_imagine.cache.resolver" resolver="liip_rasterize.cache" />
            <argument type="service" id="filesystem" />
        </service>

        <!-- LiipImagine custom data loader -->

        <service id="liip_rasterize.imagine.dataloader" class="Liip\RasterizeBundle\Imagine\Data\Loader\RasterizeDataLoader">
            <tag name="liip_imagine.data.loader" loader="liip_rasterize.loader" />
            <argument type="service" id="liip_imagine" />
            <argument type="service" id="liip_rasterize.rasterizer" />  
            <argument>%kernel.cache_dir%</argument>
        </service>

        <!-- Demo controller -->

        <service id="liip_rasterize.default.controller" class="Liip\RasterizeBundle\Controller\DefaultController">
            <argument type="service" id="templating" />
        </service>

    </services>

</container>
